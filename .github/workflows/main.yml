# This is a basic workflow to help you get started with Actions

name: Publish to GH pages

# Controls when the action will run. 
on:
  # Triggers the workflow on push events but only for the master branch and content folder
  push:
    branches: 
      - master
    paths:
      - content/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  skip_ci:
    runs-on: ubuntu-latest
    # Map the output to the job's outputs
    outputs:
      canSkip: ${{ steps.check.outputs.canSkip }}
    steps:
      - id: check
        uses: Legorooj/skip-ci@main

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Wait for the skip_ci job to run
    needs: skip_ci
    # And only run the build if canSkip isn't 'true'.
    if: ${{ needs.skip_ci.outputs.canSkip != 'true' }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}

      # Get theme, old output
      - name: Get submodules
        run: git submodule update --init --recursive

      # Update secrets
      - name: Update config
        env:
          GA_ID: ${{ secrets.THMWWTM_ANALYTICS_ID }}
        run: |
          printf "\033[0;32mReplacing config values...\033[0m\n"
          sed -i 's/#{%ANALYTICS_ID%}#/'"$GA_ID"'/g' config.toml 
          echo 'Updated:'
          echo GA_ID: $GA_ID

      # Setup hugo
      - name: Setup hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
      
      # Build to public folder
      - name: Build
        run: hugo

      - name: Prepare artifact
        run: |
          git log -1 --pretty=%B >> public/cmsg.txt
          rm -rf public/.git

      # Upload public folder for next step
      - name: Publish output
        uses: actions/upload-artifact@v1
        with:
          name: public
          path: public
    
  publish:
    needs: [build, skip_ci]
    if: ${{ needs.skip_ci.outputs.canSkip != 'true' }}
    runs-on: ubuntu-latest
    # if nothing to commit that is also returning an error
    #continue-on-error: true

    steps:
      
      # Use GH pages repo not the current one
      - uses: actions/checkout@v2
        with: 
          token: ${{ secrets.GH_PAT }}
          repository: 'thmwwtm/thmwwtm.github.io'

      # Get public from 'build' step
      - name: Get build output
        uses: actions/download-artifact@v2
        with:
          name: public      

      # Push to GH repo and remove saved last commit msg
      - name: Update public
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
          msg=$(cat cmsg.txt)
          echo $msg
          rm cmsg.txt
          git add .
          git commit -m "$msg"
          git push origin main

  post-publish:
    needs: [ publish, skip_ci]
    if: ${{ needs.skip_ci.outputs.canSkip != 'true' }}
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}
      
      - name: Update published reference
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
          git submodule update --init
          cd public
          git pull origin main --ff-only
          cd ..
          git add public
          msgparent="feat(publish): public updated on $(date +"%Y. %m. %d. at %T")"
          git commit -m "$msgparent"
          git push origin master
            
